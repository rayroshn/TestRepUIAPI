name: Playwright Tests
on:
  push:
    branches: [ main, UI_API_Test ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache Playwright browsers
        uses: actions/cache@v2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-playwright

      - name: Build & Install
        run: mvn -B install -D skipTests --no-transfer-progress

      - name: Install Playwright
        run: mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install --with-deps"

      - name: Run tests
        run: xvfb-run --auto-servernum mvn test
        continue-on-error: true

      - name: Debug test failures
        if: failure()
        run: |
          echo "Debugging test failures..."
          cat target/surefire-reports/*.txt

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Allure CommandLine
        run: |
          npm install -g allure-commandline
          allure --version

      - name: Generate Allure Report
        run: |
          allure generate target/allure-results --clean -o allure-report
        continue-on-error: true

      - name: Debug Allure Report Generation
        if: failure()
        run: |
          echo "Debugging Allure report generation..."
          ls -R target
          ls -R allure-report || echo "allure-report directory not found"
        continue-on-error: true


      - name: Debug - Check Allure Results Content
        run: |
          echo "Checking content of allure-results directory:"
          find . -name "allure-results" -type d -exec ls -R {} \;
        continue-on-error: true

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          force_orphan: true

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report